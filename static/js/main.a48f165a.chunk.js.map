{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","rows","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","disabled","length","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setAlert","message","setTimeout","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a48f165a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n// {\r\n//   /* replacing a by Link and href by to --reference to set up react router -- required to stop page reloading  */\r\n// }\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n            </li>\r\n          </ul>\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set Title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  //   text = \"new Text\";  wrong way to change the state\r\n  //   setText(\"new Text\"); // Correct way\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppcase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppcase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log(\"Uppcase was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared!\", \"warning\");\r\n  };\r\n  const handleCopy = () => {\r\n    let newText = document.getElementById(\"mybox\");\r\n    newText.select();\r\n    navigator.clipboard.writeText(newText.value);\r\n    props.showAlert(\"Copied to clipborad\", \"info\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#160948\",\r\n        }}\r\n      >\r\n        <h1 className=\"mb-4\">{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary btn-sm mx-2 my-2\" onClick={handleUpClick}  disabled={text.length === 0}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary btn-sm mx-2 my-2\" onClick={handleLoClick}  disabled={text.length === 0}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary btn-sm mx-2 my-2\"\r\n          disabled={text.length === 0}\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary btn-sm mx-2 my-2\" onClick={handleCopy}  disabled={text.length === 0}>\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary btn-sm mx-2 my-2\"\r\n          disabled={text.length === 0}\r\n          onClick={handleExtraSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <h2>Your text summary </h2>\r\n        <p>\r\n          <b>{text.split(\" \").filter(()=>{return text.length!==0}).length} </b> words and <b>{text.length}</b>{\" \"}\r\n          characters\r\n        </p>\r\n        <p>\r\n          <b>{0.008 * text.split(\" \").filter(()=>{return text.length!==0}).length}</b> Minutes read\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Nothing to Preview\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  // to capitalize the first alphabet of the alert type\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n// import About from \"./components/About\";\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  let [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or not\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"Text Analyzer - Dark mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = \"Text Analyzer - Light mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n      <Navbar title=\"Text Analyzer - React\" mode={mode} toggleMode={toggleMode} />\n      {/* <Navbar /> */}\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n        {/* when exact is used react matches exactly and if not used it makes partial matching i.e if you will try to render Component 2 and not using exact then react will make partial matching and render Component 1 at it place via partial matching\n            /users ---> Component 1\n            /users/home ---> Component 2 */}\n        {/* <Route exact path=\"/\"> */}\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Try Text Analyzer - word counter, character counter and many more!\"\n          mode={mode}\n        />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}